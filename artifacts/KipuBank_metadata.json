{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_withdrawalLimit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_bankCap",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "BankCapExceeded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidAmount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "errorData",
						"type": "bytes"
					}
				],
				"name": "WithdrawalFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "WithdrawalLimitExceeded",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit_Eth",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawal_Eth",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balances",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bankCap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalDeposits",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalWithdrawals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawalLimit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Michel Massaad",
			"details": "Implementa limites por transacción, limite global de depositos, errores personalizados y patron checks-effects-interactions",
			"errors": {
				"WithdrawalFailed(bytes)": [
					{
						"params": {
							"errorData": "datos del error de la transferencia"
						}
					}
				]
			},
			"events": {
				"Deposit_Eth(address,uint256)": {
					"params": {
						"amount": "cantidad depositada en wei",
						"user": "dirección del usuario que depositó"
					}
				},
				"Withdrawal_Eth(address,uint256)": {
					"params": {
						"amount": "cantidad retirada en wei",
						"user": "dirección del usuario que retiró"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_bankCap": "Límite global de depósitos",
						"_withdrawalLimit": "Límite de retiro por transacción"
					}
				},
				"deposit()": {
					"details": "Verifica que el depósito sea mayor a 0 y que no supere el límite globalIncrementa el contador total de depósitos"
				},
				"getBalance()": {
					"returns": {
						"_0": "Balance en wei"
					}
				},
				"withdrawal(uint256)": {
					"details": "Verifica límite de retiro por transacción y saldo suficienteIncrementa el contador total de retiros",
					"params": {
						"amount": "Monto a retirar en wei"
					}
				}
			},
			"title": "KipuBank",
			"version": 1
		},
		"userdoc": {
			"errors": {
				"BankCapExceeded()": [
					{
						"notice": "error cuando se supera el límite global de depósitos"
					}
				],
				"InsufficientBalance()": [
					{
						"notice": "error cuando el usuario no tiene suficiente balance"
					}
				],
				"InvalidAmount()": [
					{
						"notice": "Error cuando el monto es inválido (0)"
					}
				],
				"WithdrawalFailed(bytes)": [
					{
						"notice": "error cuando el retiro falla"
					}
				],
				"WithdrawalLimitExceeded()": [
					{
						"notice": "error cuando se supera el límite de retiro por transacción"
					}
				]
			},
			"events": {
				"Deposit_Eth(address,uint256)": {
					"notice": "Evento emitido cuando se deposita ETH"
				},
				"Withdrawal_Eth(address,uint256)": {
					"notice": "Evento emitido cuando se retira ETH"
				}
			},
			"kind": "user",
			"methods": {
				"balances(address)": {
					"notice": "Saldo final de cada usuario"
				},
				"bankCap()": {
					"notice": "Límite global de depósitos"
				},
				"constructor": {
					"notice": "Inicializa el contrato con los límites de retiro y depósito"
				},
				"deposit()": {
					"notice": "Deposita ETH en la bóveda del usuario"
				},
				"getBalance()": {
					"notice": "Obtiene el saldo de un usuario"
				},
				"totalDeposits()": {
					"notice": "Contador de depósitos"
				},
				"totalWithdrawals()": {
					"notice": "Contador de retiros"
				},
				"withdrawal(uint256)": {
					"notice": "Retira ETH de la bóveda del usuario"
				},
				"withdrawalLimit()": {
					"notice": "Límite de retiro por transacción"
				}
			},
			"notice": "Contrato de banco simple donde los usuarios pueden depositar y retirar ETH",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/KipuBank.sol": "KipuBank"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/KipuBank.sol": {
			"keccak256": "0xe52a075cac8bb6f3151cc530914bdee8cff5d36725b9118e11c3bcfa4bbfaa96",
			"license": "MIT",
			"urls": [
				"bzz-raw://d38f5e28ce057f317f96be9510fca1ecac7c5e827aa92995a93f25100761f49f",
				"dweb:/ipfs/QmWDTt7ZYRrPCrK8QuVeYFHEE8mHwe6FmDsHtRY9RC5GJt"
			]
		}
	},
	"version": 1
}