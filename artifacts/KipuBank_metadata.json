{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_withdrawalLimit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_bankCap",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "BankCapExceeded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidAmount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrantCall",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "errorData",
						"type": "bytes"
					}
				],
				"name": "WithdrawalFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "WithdrawalLimitExceeded",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawal",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BANK_CAP",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "WITHDRAWAL_LIMIT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balances",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalDeposited",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawalCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Michel Massaad",
			"details": "Implements transaction limits, a global deposit cap, custom errors, and follows security best practices.",
			"errors": {
				"WithdrawalFailed(bytes)": [
					{
						"params": {
							"errorData": "The data returned by the failed call."
						}
					}
				]
			},
			"events": {
				"Deposit(address,uint256)": {
					"params": {
						"amount": "The amount deposited in wei.",
						"user": "The address of the user who deposited."
					}
				},
				"Withdrawal(address,uint256)": {
					"params": {
						"amount": "The amount withdrawn in wei.",
						"user": "The address of the user who withdrew."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_bankCap": "The global deposit cap.",
						"_withdrawalLimit": "The per-transaction withdrawal limit."
					}
				},
				"deposit()": {
					"details": "Reverts if the amount is zero or if the deposit would exceed the global bank cap.Follows the checks-effects-interactions pattern."
				},
				"getBalance()": {
					"returns": {
						"_0": "The balance in wei."
					}
				},
				"withdrawal(uint256)": {
					"details": "Reverts if the amount is zero, exceeds the withdrawal limit, or if the user has insufficient balance.Follows the checks-effects-interactions pattern.",
					"params": {
						"_amount": "The amount to withdraw in wei."
					}
				}
			},
			"title": "KipuBank",
			"version": 1
		},
		"userdoc": {
			"errors": {
				"BankCapExceeded()": [
					{
						"notice": "Error thrown when the total deposits would exceed the bank's global cap."
					}
				],
				"InsufficientBalance()": [
					{
						"notice": "Error thrown when a user tries to withdraw more than their balance."
					}
				],
				"InvalidAmount()": [
					{
						"notice": "Error thrown when the provided amount is invalid (e.g., 0)."
					}
				],
				"ReentrantCall()": [
					{
						"notice": "Error for reentrancy guard, thrown when a reentrant call is detected."
					}
				],
				"WithdrawalFailed(bytes)": [
					{
						"notice": "Error thrown when a withdrawal transfer fails."
					}
				],
				"WithdrawalLimitExceeded()": [
					{
						"notice": "Error thrown when a withdrawal amount exceeds the per-transaction limit."
					}
				]
			},
			"events": {
				"Deposit(address,uint256)": {
					"notice": "Emitted when a user deposits ETH."
				},
				"Withdrawal(address,uint256)": {
					"notice": "Emitted when a user withdraws ETH."
				}
			},
			"kind": "user",
			"methods": {
				"BANK_CAP()": {
					"notice": "The global deposit cap for the entire bank."
				},
				"WITHDRAWAL_LIMIT()": {
					"notice": "The per-transaction withdrawal limit."
				},
				"balances(address)": {
					"notice": "Mapping from address to user balance."
				},
				"constructor": {
					"notice": "Initializes the contract with withdrawal and deposit limits."
				},
				"deposit()": {
					"notice": "Deposits ETH into the user's balance."
				},
				"depositCount()": {
					"notice": "A counter for the total number of deposits made."
				},
				"getBalance()": {
					"notice": "Gets the balance of the message sender."
				},
				"totalDeposited()": {
					"notice": "The total amount of ETH currently deposited in the contract."
				},
				"withdrawal(uint256)": {
					"notice": "Withdraws ETH from the user's balance."
				},
				"withdrawalCount()": {
					"notice": "A counter for the total number of withdrawals made."
				}
			},
			"notice": "A simple banking contract where users can deposit and withdraw ETH.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/KipuBank.sol": "KipuBank"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/KipuBank.sol": {
			"keccak256": "0x5c4a75e5854e7970770a353c50ebd0a9fafdd011992f6df5e5c6495f2b8d418b",
			"license": "MIT",
			"urls": [
				"bzz-raw://65631800df8a9ab985c241087e0e52d770c162e95f65b107593276ee14607d3b",
				"dweb:/ipfs/Qma8ob9gcUdC4MAYXuraa6joppeZwaE32bz4uxNKZmRpBX"
			]
		}
	},
	"version": 1
}